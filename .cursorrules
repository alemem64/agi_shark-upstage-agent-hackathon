
# 1. 프로젝트 목적 설명
해당 프로젝트는 upstage에서 주관하는 AI Agent 해커톤 행사로 4명의 팀원으로 이루어진 AGI상어뚜루뚜루루의 팀에서 진행한 프로젝트이다.

우리의 목표는 대회에서 우승하는 것이며 심사 기준을 준수하여 뛰어난 AI 앱을 7일의 시간 내에 개발해야한다.



## 1.1. 심사기준
심사 기준은 아래와 같다.

| 심사 항목 | 심사 기준 |
|-----------|-----------|
| Project Impact(20점) | - 고도화를 거칠 경우 의미 있는 비즈니스 임팩트 및 성장이 기대되는가?<br>- 문제에 대한 접근 및 솔루션의 독창성(5점)<br>- 실용성 및 활용 가능성 (5점)<br>- 비즈니스 임팩트 (10점) |
| Innovation & Creativity(20점) | - '문서 기반 AGI Application 개발' 주제에 맞게 업무 환경의 혁신과 창의성이 돋보이는가?<br>- 업무 혁신(10점)<br>- 업무 창의성(10점) |
| Technical Implementation (25점) | - 서비스를 배포할 수 있는 기술 구현 역량을 충분히 보유하고 있는가?<br>- AI 서비스 구현 완성도 (15점)<br>- 최신 기술/트랜드(e.g. RAG, AI Agent 등) 적용 (10점) |
| Effective Use of Upstage DocAI API (25점) | - Upstage DocAI API (Upstage Document Parse, Upstage Information Extract) 를 목적에 맞게 효과적으로 적용하였는가?<br>- 목적에 적합한 API 적용 (15점)<br>- API 적용 결과 우수성 (10점) |
| 가산점 (10점) | - 금융, 법률, 제조, 메디컬 분야의 application 개발시 (10점) |

결국 금융, 법류르 제조, 메디컬 분야에서 Document 기반으로 작동하며 RAG 기술 및 AI 에이전트 기술과 Upstage의 Document Parsing 또는 Information Extract 서비스를 사용한 AI 앱을 개발해야 한다.

## 1.2. 팀에서 정한 서비스 요약



# 2. 서비스의 기능별 설명





# 3. 기타 답변시 참고할 사항들

## 3.1. 프로젝트 구조

-   **프로젝트 구조는 다음과 같이 설정하세요.

```

upstage-agent-hackathon/
│
├── app/                


```

---

---

---

# 3.2. Git 커밋 메시지 작성 규칙

**포맷:**

```
<type>: <subject>

<body>
```

**커밋 타입 (Type):**

-   feat: 새로운 기능 추가
-   fix: 버그 수정
-   docs: 문서 수정
-   style: 코드 포맷팅, 세미콜론 누락, 코드 변경이 없는 경우
-   refactor: 코드 리팩토링
-   test: 테스트 코드, 리팩토링 테스트 코드 추가
-   chore: 빌드 업무 수정, 패키지 매니저 수정

**제목 (Subject):**

-   변경 사항에 대한 간단한 설명
-   50자 이내로 작성
-   마침표 없이 작성
-   현재 시제 사용

**본문 (Body):**

-   변경 사항에 대한 자세한 설명
-   어떻게 보다는 무엇을, 왜 변경했는지 설명
-   여러 줄의 메시지를 작성할 땐 "-"로 구분

**예시:**

```plaintext
feat: 로그인 화면 키보드 UX 개선
- TextInput ref를 사용하여 자동 포커스 기능 추가
- returnKeyType 설정으로 키보드 엔터키 동작 개선
- 전화번호 입력 후 자동으로 비밀번호 입력창으로 포커스 이동
- 비밀번호 입력 후 엔터키로 로그인 가능하도록 개선
```


# 3.3 코드 작성시 참고할 점
1. Respond in the language of the question
2. Always write code and comments in English, regardless of the question language
3. Align equals signs (=) vertically in code blocks for better readability, like:\
x    = 1
y    = 2
name = "John"